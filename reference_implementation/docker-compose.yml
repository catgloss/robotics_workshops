version: "3.9"

networks:
  rabbitmq_asr_notif_net:
    driver: bridge

volumes:
  asr_document_db:
    
services:
  mongodb:
    image : mongo
    container_name: mongodb
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - asr_document_db:/data/db
    ports:
      - 27017:27017
    restart: unless-stopped
  
  rabbitmq-container:
    image: rabbitmq:3-management
    container_name: 'rabbitmq'
    hostname: rabbitBroker
    ports:
        - 5672:5672
        - 15672:15672
        - 15692:15692
    networks:
        - rabbitmq_asr_notif_net
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 15s
      retries: 10
  
  # flask-backend:
  #   build: asr_app/
  #   ports: 
  #     - 5000:5000
  #   networks:
  #     - rabbitmq_asr_notif_net
  #   depends_on:
  #     - rabbitmq-container
  #   links: [rabbitmq-container]
  #   environment:
  #     - RABBIT_HOST=rabbitmq-container
  #   volumes:
  #     - /tmp/pretrained_models:/tmp/pretrained_models
  #   restart: unless-stopped
  #   expose:
  #     - 5000
  
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      rabbitmq-container:
        condition: service_healthy
  
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/dashboard_files:/etc/dashboards
    depends_on:
      - prometheus
